// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: protos/monitor.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitorDeviceLocationRequestV1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgId         string                 `protobuf:"bytes,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	MapId         string                 `protobuf:"bytes,2,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	DeviceId      []string               `protobuf:"bytes,3,rep,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorDeviceLocationRequestV1) Reset() {
	*x = MonitorDeviceLocationRequestV1{}
	mi := &file_protos_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorDeviceLocationRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorDeviceLocationRequestV1) ProtoMessage() {}

func (x *MonitorDeviceLocationRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorDeviceLocationRequestV1.ProtoReflect.Descriptor instead.
func (*MonitorDeviceLocationRequestV1) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *MonitorDeviceLocationRequestV1) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *MonitorDeviceLocationRequestV1) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *MonitorDeviceLocationRequestV1) GetDeviceId() []string {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

type MonitorDeviceLocationStreamEventV1 struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Event         []*MonitorDeviceLocationStreamEventV1_LocationEventV1 `protobuf:"bytes,1,rep,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorDeviceLocationStreamEventV1) Reset() {
	*x = MonitorDeviceLocationStreamEventV1{}
	mi := &file_protos_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorDeviceLocationStreamEventV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorDeviceLocationStreamEventV1) ProtoMessage() {}

func (x *MonitorDeviceLocationStreamEventV1) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorDeviceLocationStreamEventV1.ProtoReflect.Descriptor instead.
func (*MonitorDeviceLocationStreamEventV1) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *MonitorDeviceLocationStreamEventV1) GetEvent() []*MonitorDeviceLocationStreamEventV1_LocationEventV1 {
	if x != nil {
		return x.Event
	}
	return nil
}

type MonitorDeviceLocationStreamEventV1_LocationEventV1 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName    string                 `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	MapId         string                 `protobuf:"bytes,3,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	X             float32                `protobuf:"fixed32,4,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,5,opt,name=y,proto3" json:"y,omitempty"`
	Z             float32                `protobuf:"fixed32,6,opt,name=z,proto3" json:"z,omitempty"`
	Info          map[string]string      `protobuf:"bytes,7,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) Reset() {
	*x = MonitorDeviceLocationStreamEventV1_LocationEventV1{}
	mi := &file_protos_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorDeviceLocationStreamEventV1_LocationEventV1) ProtoMessage() {}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) ProtoReflect() protoreflect.Message {
	mi := &file_protos_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorDeviceLocationStreamEventV1_LocationEventV1.ProtoReflect.Descriptor instead.
func (*MonitorDeviceLocationStreamEventV1_LocationEventV1) Descriptor() ([]byte, []int) {
	return file_protos_monitor_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *MonitorDeviceLocationStreamEventV1_LocationEventV1) GetInfo() map[string]string {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_protos_monitor_proto protoreflect.FileDescriptor

const file_protos_monitor_proto_rawDesc = "" +
	"\n" +
	"\x14protos/monitor.proto\x12\x16location.engine.protos\"k\n" +
	"\x1eMonitorDeviceLocationRequestV1\x12\x15\n" +
	"\x06org_id\x18\x01 \x01(\tR\x05orgId\x12\x15\n" +
	"\x06map_id\x18\x02 \x01(\tR\x05mapId\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x03(\tR\bdeviceId\"\xbc\x03\n" +
	"\"MonitorDeviceLocationStreamEventV1\x12`\n" +
	"\x05event\x18\x01 \x03(\v2J.location.engine.protos.MonitorDeviceLocationStreamEventV1.LocationEventV1R\x05event\x1a\xb3\x02\n" +
	"\x0fLocationEventV1\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\x12\x15\n" +
	"\x06map_id\x18\x03 \x01(\tR\x05mapId\x12\f\n" +
	"\x01x\x18\x04 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x05 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x06 \x01(\x02R\x01z\x12h\n" +
	"\x04info\x18\a \x03(\v2T.location.engine.protos.MonitorDeviceLocationStreamEventV1.LocationEventV1.InfoEntryR\x04info\x1a7\n" +
	"\tInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xa5\x01\n" +
	"\x0fLocationMonitor\x12\x91\x01\n" +
	"\x17MonitorDeviceLocationV1\x126.location.engine.protos.MonitorDeviceLocationRequestV1\x1a:.location.engine.protos.MonitorDeviceLocationStreamEventV1\"\x000\x01BFZDgithub.com/Shuv1Wolf/subterra-locate/services/location-engine/protosb\x06proto3"

var (
	file_protos_monitor_proto_rawDescOnce sync.Once
	file_protos_monitor_proto_rawDescData []byte
)

func file_protos_monitor_proto_rawDescGZIP() []byte {
	file_protos_monitor_proto_rawDescOnce.Do(func() {
		file_protos_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_monitor_proto_rawDesc), len(file_protos_monitor_proto_rawDesc)))
	})
	return file_protos_monitor_proto_rawDescData
}

var file_protos_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_monitor_proto_goTypes = []any{
	(*MonitorDeviceLocationRequestV1)(nil),                     // 0: location.engine.protos.MonitorDeviceLocationRequestV1
	(*MonitorDeviceLocationStreamEventV1)(nil),                 // 1: location.engine.protos.MonitorDeviceLocationStreamEventV1
	(*MonitorDeviceLocationStreamEventV1_LocationEventV1)(nil), // 2: location.engine.protos.MonitorDeviceLocationStreamEventV1.LocationEventV1
	nil, // 3: location.engine.protos.MonitorDeviceLocationStreamEventV1.LocationEventV1.InfoEntry
}
var file_protos_monitor_proto_depIdxs = []int32{
	2, // 0: location.engine.protos.MonitorDeviceLocationStreamEventV1.event:type_name -> location.engine.protos.MonitorDeviceLocationStreamEventV1.LocationEventV1
	3, // 1: location.engine.protos.MonitorDeviceLocationStreamEventV1.LocationEventV1.info:type_name -> location.engine.protos.MonitorDeviceLocationStreamEventV1.LocationEventV1.InfoEntry
	0, // 2: location.engine.protos.LocationMonitor.MonitorDeviceLocationV1:input_type -> location.engine.protos.MonitorDeviceLocationRequestV1
	1, // 3: location.engine.protos.LocationMonitor.MonitorDeviceLocationV1:output_type -> location.engine.protos.MonitorDeviceLocationStreamEventV1
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protos_monitor_proto_init() }
func file_protos_monitor_proto_init() {
	if File_protos_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_monitor_proto_rawDesc), len(file_protos_monitor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_monitor_proto_goTypes,
		DependencyIndexes: file_protos_monitor_proto_depIdxs,
		MessageInfos:      file_protos_monitor_proto_msgTypes,
	}.Build()
	File_protos_monitor_proto = out.File
	file_protos_monitor_proto_goTypes = nil
	file_protos_monitor_proto_depIdxs = nil
}
